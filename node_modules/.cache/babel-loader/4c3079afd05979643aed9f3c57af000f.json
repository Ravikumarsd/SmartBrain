{"ast":null,"code":"import _classCallCheck from \"/Users/ravi/react/SmartBrain/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ravi/react/SmartBrain/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ravi/react/SmartBrain/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ravi/react/SmartBrain/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ravi/react/SmartBrain/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ravi/react/SmartBrain/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ravi/react/SmartBrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport { particles } from './particles';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      } //Loading data from backend and storing them in states\n\n    };\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    _this.calculateFaceLocation = function (data) {\n      var clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      var image = document.getElementById('inputimage');\n      var width = Number(image.width);\n      var height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    _this.displayFace = function (box) {\n      _this.setState({\n        box: box\n      }); //we can also use ES7 syntax : this.setState({box})\n\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onButtonClick = function () {\n      var input = _this.state.input;\n\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          displayFace = _assertThisInitialize.displayFace,\n          calculateFaceLocation = _assertThisInitialize.calculateFaceLocation;\n\n      _this.setState({\n        imageURL: input\n      });\n\n      fetch('https://salty-meadow-85226.herokuapp.com/imagesurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: input\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (response) {\n          fetch('https://salty-meadow-85226.herokuapp.com/images', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: _this.state.user.id\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (count) {\n            _this.setState(Object.assign(_this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        displayFace(calculateFaceLocation(response));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      _this.setState({\n        route: route\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var onRouteChange = this.onRouteChange,\n          onInputChange = this.onInputChange,\n          onButtonClick = this.onButtonClick;\n      var _this$state = this.state,\n          route = _this$state.route,\n          imageURL = _this$state.imageURL,\n          box = _this$state.box,\n          user = _this$state.user;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), route === 'signin' ? React.createElement(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }) : route === 'register' ? React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        onRouteChange: onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        name: user.name,\n        entries: user.entries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onButtonClick: onButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageURL: imageURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ravi/react/SmartBrain/src/App.js"],"names":["React","Component","Navigation","ImageLinkForm","Rank","Particles","particles","FaceRecognition","Signin","Register","App","state","input","imageURL","box","route","user","id","name","email","entries","joined","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFace","onInputChange","event","target","value","onButtonClick","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","console","log","onRouteChange"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAC,EADA;AAENC,MAAAA,QAAQ,EAAC,EAFH;AAGNC,MAAAA,GAAG,EAAC,EAHE;AAINC,MAAAA,KAAK,EAAC,QAJA;AAKNC,MAAAA,IAAI,EAAC;AACHC,QAAAA,EAAE,EAAC,EADA;AAEHC,QAAAA,IAAI,EAAC,EAFF;AAGHC,QAAAA,KAAK,EAAC,EAHH;AAIHC,QAAAA,OAAO,EAAC,CAJL;AAKHC,QAAAA,MAAM,EAAC;AALJ,OALC,CAcR;;AAdQ,K;;UAeRC,Q,GAAW,UAACC,IAAD,EAAU;AACnB,YAAKC,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAC;AACHC,UAAAA,EAAE,EAACM,IAAI,CAACN,EADL;AAEHC,UAAAA,IAAI,EAACK,IAAI,CAACL,IAFP;AAGHC,UAAAA,KAAK,EAACI,IAAI,CAACJ,KAHR;AAIHC,UAAAA,OAAO,EAACG,IAAI,CAACH,OAJV;AAKHC,UAAAA,MAAM,EAACE,IAAI,CAACF;AALT;AADO,OAAd;AASD,K;;UAGDI,qB,GAAwB,UAACF,IAAD,EAAU;AAC/B,UAAMG,YAAY,GAAGH,IAAI,CAACI,OAAL,CAAa,CAAb,EAAgBJ,IAAhB,CAAqBK,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAjE;AACA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,UAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACA,aAAO;AACJC,QAAAA,OAAO,EAAEX,YAAY,CAACY,QAAb,GAAwBJ,KAD7B;AAEJK,QAAAA,MAAM,EAAGb,YAAY,CAACc,OAAb,GAAuBJ,MAF5B;AAGJK,QAAAA,QAAQ,EAAEP,KAAK,GAAIR,YAAY,CAACgB,SAAb,GAAyBR,KAHxC;AAIJS,QAAAA,SAAS,EAAEP,MAAM,GAAIV,YAAY,CAACkB,UAAb,GAA0BR;AAJ3C,OAAP;AAMF,K;;UAEDS,W,GAAc,UAAC/B,GAAD,EAAS;AACnB,YAAKU,QAAL,CAAc;AAACV,QAAAA,GAAG,EAACA;AAAL,OAAd,EADmB,CACQ;;AAC9B,K;;UAGDgC,a,GAAgB,UAACC,KAAD,EAAW;AACzB,YAAKvB,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAACmC,KAAK,CAACC,MAAN,CAAaC;AAApB,OAAd;AACD,K;;UAEDC,a,GAAgB,YAAK;AAAA,UACZtC,KADY,GACH,MAAKD,KADF,CACZC,KADY;;AAAA;AAAA,UAEZiC,WAFY,yBAEZA,WAFY;AAAA,UAEApB,qBAFA,yBAEAA,qBAFA;;AAGnB,YAAKD,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAACD;AAAV,OAAd;;AACAuC,MAAAA,KAAK,CAAC,oDAAD,EAAsD;AACrDC,QAAAA,MAAM,EAAC,MAD8C;AAErDC,QAAAA,OAAO,EAAC;AAAC,0BAAgB;AAAjB,SAF6C;AAGrDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB5C,UAAAA,KAAK,EAACA;AADa,SAAf;AAH+C,OAAtD,CAAL,CAOC6C,IAPD,CAOM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAPd,EAQCF,IARD,CAQM,UAAAC,QAAQ,EAAI;AAChB,YAAGA,QAAH,EAAa;AACXP,UAAAA,KAAK,CAAC,iDAAD,EAAmD;AACtDC,YAAAA,MAAM,EAAC,KAD+C;AAEtDC,YAAAA,OAAO,EAAC;AAAC,8BAAgB;AAAjB,aAF8C;AAGtDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBvC,cAAAA,EAAE,EAAC,MAAKN,KAAL,CAAWK,IAAX,CAAgBC;AADA,aAAf;AAHgD,WAAnD,CAAL,CAOCwC,IAPD,CAOM,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WAPd,EAQCF,IARD,CAQO,UAAAG,KAAK,EAAI;AACZ,kBAAKpC,QAAL,CAAcqC,MAAM,CAACC,MAAP,CAAc,MAAKnD,KAAL,CAAWK,IAAzB,EAA8B;AAACI,cAAAA,OAAO,EAACwC;AAAT,aAA9B,CAAd;AACF,WAVF;AAWD;;AACDf,QAAAA,WAAW,CAACpB,qBAAqB,CAACiC,QAAD,CAAtB,CAAX;AACD,OAvBD,EAwBEK,KAxBF,CAwBQ,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAxBX;AAyBD,K;;UAEDG,a,GAAgB,UAACpD,KAAD,EAAW;AACzB,YAAKS,QAAL,CAAc;AAACT,QAAAA,KAAK,EAACA;AAAP,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,UAEAoD,aAFA,GAE6C,IAF7C,CAEAA,aAFA;AAAA,UAEcrB,aAFd,GAE6C,IAF7C,CAEcA,aAFd;AAAA,UAE4BI,aAF5B,GAE6C,IAF7C,CAE4BA,aAF5B;AAAA,wBAG0B,KAAKvC,KAH/B;AAAA,UAGDI,KAHC,eAGDA,KAHC;AAAA,UAGKF,QAHL,eAGKA,QAHL;AAAA,UAGcC,GAHd,eAGcA,GAHd;AAAA,UAGkBE,IAHlB,eAGkBA,IAHlB;AAKP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AACW,QAAA,MAAM,EAAEV,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAGIS,KAAK,KAAK,QAAX,GACG,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAI,KAAKO,QAAzB;AAAmC,QAAA,aAAa,EAAE6C,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAEEpD,KAAK,KAAK,UAAX,GACF,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAI,KAAKO,QAA3B;AAAqC,QAAA,aAAa,EAAE6C,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,GAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,aAAa,EAAEA,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AACI,QAAA,IAAI,EAAEnD,IAAI,CAACE,IADf;AAEI,QAAA,OAAO,EAAEF,IAAI,CAACI,OAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKE,oBAAC,aAAD;AACc,QAAA,aAAa,EAAE0B,aAD7B;AAEc,QAAA,aAAa,EAAEI,aAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAQE,oBAAC,eAAD;AACA,QAAA,GAAG,EAAEpC,GADL;AAEA,QAAA,QAAQ,EAAED,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAPJ,CADF;AAuBD;;;;EAlHeZ,S;;AAqHlB,eAAeS,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport { particles } from './particles'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\nclass App extends Component {\n  state = {\n    input:'',\n    imageURL:'',\n    box:{},\n    route:'signin',\n    user:{\n      id:'',\n      name:'',\n      email:'',\n      entries:0,\n      joined:''\n    }\n  }\n\n  //Loading data from backend and storing them in states\n  loadUser = (data) => {\n    this.setState({\n      user:{\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        entries:data.entries,\n        joined:data.joined\n      }\n    })\n  }\n\n  //Calculating coordinates for Box\n  calculateFaceLocation = (data) => {\n     const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n     const image = document.getElementById('inputimage');\n     const width = Number(image.width);\n     const height = Number(image.height);\n     return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow:  clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n     }\n  }\n\n  displayFace = (box) => {\n      this.setState({box:box})   //we can also use ES7 syntax : this.setState({box})\n  }\n \n\n  onInputChange = (event) => {\n    this.setState({input:event.target.value})\n  }\n\n  onButtonClick = () =>{\n    const {input} = this.state;\n    const {displayFace,calculateFaceLocation} = this;\n    this.setState({imageURL:input});\n    fetch('https://salty-meadow-85226.herokuapp.com/imagesurl',{\n          method:'post',\n          headers:{'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            input:input\n          })\n        })\n    .then(response => response.json())    \n    .then(response => {\n      if(response) {\n        fetch('https://salty-meadow-85226.herokuapp.com/images',{\n          method:'put',\n          headers:{'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id:this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then( count => {\n            this.setState(Object.assign(this.state.user,{entries:count}))\n         })\n      }\n      displayFace(calculateFaceLocation(response))\n    })\n     .catch(err => console.log(err)) \n  }\n\n  onRouteChange = (route) => {\n    this.setState({route:route})\n  }\n\n  render() {\n    \n    const {onRouteChange,onInputChange,onButtonClick} = this;\n    const{route,imageURL,box,user} = this.state;\n    \n    return (\n      <div className=\"App\">\n      <Particles className=\"particles\"\n                 params={particles}/>\n        {(route === 'signin') ? \n            <Signin loadUser = {this.loadUser} onRouteChange={onRouteChange}/> \n        : (route === 'register') ?  \n        <Register loadUser = {this.loadUser} onRouteChange={onRouteChange}/> \n        : <div>\n            <Navigation onRouteChange={onRouteChange} />\n            <Rank \n                name={user.name} \n                entries={user.entries}/>\n            <ImageLinkForm \n                          onInputChange={onInputChange} \n                          onButtonClick={onButtonClick}/>    \n            <FaceRecognition \n            box={box}\n            imageURL={imageURL}/> \n        </div>\n        }         \n       </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}